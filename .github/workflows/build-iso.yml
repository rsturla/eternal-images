name: Build ISO Files

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 * *'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}/eternal-linux
    strategy:
      fail-fast: false
      matrix:
        image: [lumina]
        version: [39]
        arch: [x86_64]
        driver: ['', nvidia]
    steps:
      - name: Generate ISOs
        uses: rsturla/eternal-iso-generator@main
        id: generate
        with:
          arch: ${{ matrix.arch }}
          image-repo: ${{ env.IMAGE_REGISTRY }}
          image-name: ${{ matrix.image }}
          image-tag: ${{ matrix.version }}${{ matrix.driver && format('-{0}', matrix.driver) || '' }}
          fedora-version: ${{ matrix.version }}
          secureboot-key-url: 'https://github.com/rsturla/akmods/raw/main/_certs/public_key.der'
          secureboot-password: 'eternal'

      - name: Upload ISO
        shell: bash
        env:
          RCLONE_CONFIG_R2_TYPE: s3
          RCLONE_CONFIG_R2_PROVIDER: Cloudflare
          RCLONE_CONFIG_R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          RCLONE_CONFIG_R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          RCLONE_CONFIG_R2_REGION: auto
          RCLONE_CONFIG_R2_ENDPOINT: https://${{ secrets.CLOUDFLARE_ACCOUNT_ID }}.r2.cloudflarestorage.com
          R2_BUCKET_NAME: ${{ vars.R2_BUCKET_NAME }}
          R2_BUCKET_PREFIX: ${{ matrix.image }}
          SOURCE_DIR: ${{ steps.generate.outputs.output-path }}
        run: |
          sudo -v ; curl https://rclone.org/install.sh | sudo bash
          rclone copy $SOURCE_DIR R2:$R2_BUCKET_NAME/$R2_BUCKET_PREFIX
