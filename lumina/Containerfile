ARG BASE_IMAGE=ghcr.io/rsturla/eternal-linux/main/silverblue
ARG BASE_TAG=38
ARG FEDORA_VERSION=${BASE_TAG}


FROM golang:1.21 AS tc-redirect-tap-build

RUN git clone https://github.com/awslabs/tc-redirect-tap.git --depth 1 /tmp/tc-redirect-tap && \
  cd /tmp/tc-redirect-tap && \
  GOOS=linux GOARCH=amd64 go build -o bin/tc-redirect-tap-amd64 ./cmd/tc-redirect-tap


FROM ${BASE_IMAGE}:${BASE_TAG}

COPY files/etc/yum.repos.d /etc/yum.repos.d
COPY files/usr /usr

# Configure Just
RUN echo "!include /usr/share/eternal/lumina.just" >> /usr/share/eternal/justfile && \
  echo "!include /usr/share/eternal/lumina-setup.just" >> /usr/share/eternal/justfile

# Configure Gnome Shell Extensions and themes
RUN rpm-ostree install \
    gnome-shell-extension-appindicator \
    gnome-shell-extension-dash-to-dock \
    gnome-shell-extension-blur-my-shell \
    gnome-shell-extension-gsconnect \
    nautilus-gsconnect \
    yaru-theme \
    gnome-tweaks \
  && \
  rm -rf /tmp/* /var/* && \
  ostree container commit

# Remove unwanted packages
RUN rpm-ostree override remove \
    gnome-tour \
    gnome-extensions-app \
    gnome-system-monitor \
    yelp \
  && \
  rm -rf /tmp/* /var/* && \
  ostree container commit

# Configure dconf automated updates
RUN systemctl unmask dconf-update.service && \
  systemctl enable dconf-update.service \
  && \
  rm -rf /tmp/* /var/* && \
  ostree container commit

# Install Starship Shell Prompt
RUN curl -Lo /tmp/starship.tar.gz "https://github.com/starship/starship/releases/latest/download/starship-x86_64-unknown-linux-gnu.tar.gz" && \
  tar -xzf /tmp/starship.tar.gz -C /tmp && \
  install -c -m 0755 /tmp/starship /usr/bin \
  && \
  rm -rf /tmp/* /var/* && \
  ostree container commit

# Install Visual Studio Code
RUN rpm-ostree install \
    code \
  && \
  rm -f /etc/yum.repos.d/vscode.repo \
  && \
  rm -rf /tmp/* /var/* && \
  ostree container commit

# Install virt-manager
RUN rpm-ostree install \
    libvirt \
    virt-manager \
  && \
  rm -rf /tmp/* /var/* && \
  ostree container commit

# Install Docker
RUN rpm-ostree install \
  docker-ce \
  docker-ce-cli \
  containerd.io \
  docker-buildx-plugin \
  docker-compose-plugin \
  && \
  rm -f /etc/yum.repos.d/docker-ce.repo \
  && \
  systemctl enable docker.service \
  && \
  rm -rf /var/* /tmp/* && \
  ostree container commit

# Install DevPod
RUN rpm-ostree install https://github.com/loft-sh/devpod/releases/latest/download/DevPod_linux_x86_64.rpm && \
  curl -Lo /tmp/devpod https://github.com/loft-sh/devpod/releases/latest/download/devpod-linux-amd64 && \
  install -c -m 0755 /tmp/devpod /usr/bin/devpod \
  && \
  rm -rf /tmp/* /var/* && \
  ostree container commit

# Install Firecracker and CNI plugins
RUN release_url="https://github.com/firecracker-microvm/firecracker/releases" && \
  LATEST=$(basename $(curl -fsSLI -o /dev/null -w %{url_effective} ${release_url}/latest)) && \
  curl -L ${release_url}/download/${LATEST}/firecracker-${LATEST}-$(uname -m).tgz | tar -xz -C /tmp && \
  install -c -m 0755 /tmp/release-${LATEST}-$(uname -m)/firecracker-${LATEST}-$(uname -m) /usr/bin/firecracker && \
  install -c -m 0755 /tmp/release-${LATEST}-$(uname -m)/jailer-${LATEST}-$(uname -m) /usr/bin/jailer \
  && \
  curl -Lo /tmp/cni-plugins.tgz $(curl https://api.github.com/repos/containernetworking/plugins/releases/latest | jq -r '.assets[] | select(.name| test("cni-plugins-linux-amd64-v.*.tgz$")).browser_download_url') && \
  mkdir -p /tmp/cni-plugins && \
  tar -xzf /tmp/cni-plugins.tgz -C /tmp/cni-plugins && \
  mkdir -p /usr/cni/bin && \
  mv /tmp/cni-plugins/* /usr/cni/bin \
  && \
  rm -rf /tmp/* /var/* && \
  ostree container commit

# Install additional CLI apps
COPY --from=tc-redirect-tap-build /tmp/tc-redirect-tap/bin/tc-redirect-tap-amd64 /usr/cni/bin/tc-redirect-tap
COPY --from=cgr.dev/chainguard/ko:latest /usr/bin/ko /usr/bin/ko
COPY --from=cgr.dev/chainguard/kubectl:latest /usr/bin/kubectl /usr/bin/kubectl
RUN curl -Lo /tmp/kind "https://github.com/kubernetes-sigs/kind/releases/latest/download/kind-$(uname)-amd64" && \
  install -c -m 0755 /tmp/kind /usr/bin/kind \
  && \
  rpm-ostree install $(curl https://api.github.com/repos/charmbracelet/vhs/releases/latest | jq -r '.assets[] | select(.name| test(".*.x86_64.rpm$")).browser_download_url') && \
  curl -Lo /tmp/ttyd https://github.com/tsl0922/ttyd/releases/latest/download/ttyd.x86_64 && \
  install -c -m 0755 /tmp/ttyd /usr/bin/ttyd \
  && \
  rm -rf /tmp/* /var/* && \
  ostree container commit
